#El codigo pudó con los 3 laberintos
#Autor: Juan Horacio Rivera Peña  
#Laberinto 1
#Inicio cualquier casilla
#Final cualquier casilla
    #0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9
L1=([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], #0
    [1,0,1,0,1,0,0,0,1,0,1,1,1,1,0,0,0,0,1,1], #1
    [1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,1,1,0,1,1], #2
    [1,0,1,0,0,0,1,0,1,0,0,0,1,0,0,1,0,0,1,1], #3
    [1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,0,1,1,1], #4
    [1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,1], #5
    [1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1], #6
    [1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1], #7
    [1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,0,1], #8
    [1,0,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0,1,0,1], #9
    [1,0,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1], #10
    [1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1], #11
    [1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1], #12
    [1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1], #13
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1], #14
    [1,1,0,1,1,0,1,1,0,1,1,0,1,0,1,0,1,0,0,1], #15
    [1,0,0,0,1,0,1,1,0,1,1,0,1,0,1,0,1,0,1,1], #16
    [1,1,0,1,1,0,1,0,0,1,1,0,1,0,1,0,1,0,0,1], #17
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]) #18

#Laberinto 2
#Inicio cualquier casilla
#Final cualquier casilla
    #0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9
L2=([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], #0
    [1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,0,0,1], #1
    [1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,1,1,0,1,1], #2
    [1,0,1,0,1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1], #3
    [1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1], #4
    [1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1], #5
    [1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1], #6
    [1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,1], #7
    [1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1], #8
    [1,0,1,0,1,0,1,1,1,0,0,0,1,1,0,0,0,1,0,1], #9
    [1,0,0,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1], #10
    [1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1], #11
    [1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1], #12
    [1,0,1,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1], #13
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1], #14
    [1,1,0,1,1,0,1,0,0,1,1,1,1,0,1,0,1,0,0,1], #15
    [1,0,0,0,0,0,1,1,0,1,0,0,1,0,1,0,1,0,1,1], #16
    [1,1,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,1], #17
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]) #18
   
#Laberinto 3
#Inicio en cualquier casilla
#Final en cualquier casilla
    #0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9
L3=([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], #0
    [1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,1], #1
    [1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,0,1,1], #2
    [1,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,1], #3
    [1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1], #4
    [1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1], #5
    [1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1], #6
    [1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1], #7
    [1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1,0,1], #8
    [1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,1], #9
    [1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1], #10
    [1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1], #11
    [1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1], #12
    [1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1], #13
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1], #14
    [1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1], #15
    [1,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1,1], #16
    [1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1], #17
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]) #18

r=([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], #0
    [1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0,0,0,1], #1
    [1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,0,1,1], #2
    [1,0,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,1,1], #3
    [1,0,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,1,1,1], #4
    [1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1], #5
    [1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1], #6
    [1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1], #7
    [1,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1,0,1], #8
    [1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,1], #9
    [1,0,1,0,0,0,0,0,1,1,0,1,1,1,0,1,0,0,0,1], #10
    [1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1], #11
    [1,0,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,0,1], #12
    [1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1], #13
    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1], #14
    [1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1], #15
    [1,0,0,0,1,0,1,1,0,1,0,0,0,0,1,0,1,0,1,1], #16
    [1,1,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,0,0,1], #17
    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]) #18
 
L=L3


def limpiar(a):
    for i in range (0,19):
        for j in range(0,20):
            a[i][j]=0

def imprimir(a):
    for i in range (0,19):
        for j in range(0,20):
            print(a[i][j],"\t", end="")
        print()
    print("\n")  

def menor(x,y,s):

    arriba=s[x][y-1]
    derecha=s[x+1][y]
    abajo=s[x][y+1]
    izquierda=s[x-1][y]

    if(arriba<=derecha and arriba<=abajo and arriba<=izquierda):
        return 1

    elif(derecha<=arriba and derecha<=abajo and derecha<=izquierda):
        return 2
    
    elif(abajo<=arriba and abajo<=derecha and abajo<=izquierda):
        return 3
    
    elif (izquierda<=arriba and izquierda<=derecha and izquierda<=abajo):
        return 4

imprimir(L)

limpiar(r)

ri=int(input("Ingrese la fila del inicio: "))
ci=int(input("Ingrese la columna del inicio: "))

while(L[ri][ci]!=0):
    print("Usted selecciono una casilla con valor ",L[ri][ci])
    print("Usted selecciono una coordenada no apta para el inicio")
    ri=int(input("Ingrese la fila del inicio: "))
    ci=int(input("Ingrese la columna del inicio: "))
    print("\n")

rm=int(input("Ingrese la fila del fin: "))
cm=int(input("Ingrese la columna del fin: "))

while(L[rm][cm]!=0):
    print("Usted selecciono una casilla con valor ",L[rm][cm])
    print("Usted selecciono una coordenada no apta para el fin")
    rm=int(input("Ingrese la fila del fin: "))
    cm=int(input("Ingrese la columna del fin: "))
    print("\n")

for i in range(0,19):
    for j in range(0,20):
        r[i][j]=abs(i-rm)+abs(j-cm)
        if(L[i][j]==1):
            L[i][j]=999

imprimir(L)
imprimir(r)
for i in range(0,19):
    for j in range(0,20):
        if(r[i][j]>L[i][j]):
            L[i][j] = r[i][j]

imprimir(L)

z=100
i=ri 
j=ci 
bandera=menor(i,j,L)
while(L[i][j]!=0):
    L[i][j]=z
    imprimir(L)
    if(bandera==1):
        j-=1

    elif(bandera==2):
        i+=1
    
    elif (bandera==3):
        j+=1

    elif (bandera==4):
        i-=1
    z+=1

    bandera=menor(i,j,L)

print("Llego a la meta :D")
